{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { dummyData } from \"../../dummyData\";\nimport { showQrCode, addClaim } from \"./clalimListType\";\nimport { addClaimData } from \"./claimListAction\";\ninitialState = {\n  claims: dummyData\n};\n\nvar claimReducer = function claimReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var claim = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (claim.type == showQrCode) {\n    return _objectSpread({}, state);\n  } else if (claim.type == addClaim) {\n    dummyData.push(claim.payload);\n    return state;\n  } else {\n    return state;\n  }\n};\n\nexport default claimReducer;","map":{"version":3,"sources":["/Users/muhammadtaimoor/Projects/adappt/redux/claims/claimListReducer.js"],"names":["dummyData","showQrCode","addClaim","addClaimData","initialState","claims","claimReducer","state","claim","type","push","payload"],"mappings":";;;;;;AAAA,SAAQA,SAAR;AACA,SAASC,UAAT,EAAqBC,QAArB;AACA,SAASC,YAAT;AAEAC,YAAY,GAAG;AACXC,EAAAA,MAAM,EAAEL;AADG,CAAf;;AAIA,IAAIM,YAAY,GAAG,SAAfA,YAAe,GAAiC;AAAA,MAAhCC,KAAgC,uEAAxBH,YAAwB;AAAA,MAAVI,KAAU;;AAChD,MAAGA,KAAK,CAACC,IAAN,IAAYR,UAAf,EACA;AACI,6BAAUM,KAAV;AACH,GAHD,MAIK,IAAGC,KAAK,CAACC,IAAN,IAAYP,QAAf,EACL;AACIF,IAAAA,SAAS,CAACU,IAAV,CAAeF,KAAK,CAACG,OAArB;AACA,WAAOJ,KAAP;AACH,GAJI,MAML;AACI,WAAOA,KAAP;AACH;AACJ,CAdD;;AAgBA,eAAeD,YAAf","sourcesContent":["import {dummyData} from '../../dummyData'\nimport { showQrCode, addClaim } from './clalimListType';\nimport { addClaimData } from './claimListAction';\n\ninitialState = {\n    claims: dummyData\n}\n\nlet claimReducer = (state = initialState, claim) => {\n    if(claim.type==showQrCode)\n    {\n        return{...state}\n    }\n    else if(claim.type==addClaim)\n    {\n        dummyData.push(claim.payload)\n        return state\n    }\n    else\n    {\n        return state\n    }\n}\n\nexport default claimReducer;"]},"metadata":{},"sourceType":"module"}