{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/muhammadtaimoor/Projects/rn-onlineticket/screens/ticketListScreen.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Button } from 'react-native-elements';\nimport { colors } from \"../constants/theme\";\nimport RenderTicket from \"../components/RenderTicket\";\nimport QRCode from 'react-native-qrcode-svg';\nimport { ticketFilters, setTicketFilter, closeQRCode, openQRCode } from \"../redux\";\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height;\n\nfunction TicketListScreen(props) {\n  var _useState = useState(new Animated.Value(16)),\n      _useState2 = _slicedToArray(_useState, 2),\n      xValue = _useState2[0],\n      setXValue = _useState2[1];\n\n  var _useState3 = useState(new Animated.Value(70)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      width = _useState4[0],\n      setWdith = _useState4[1];\n\n  _slideToValid = function _slideToValid() {\n    props.filterTicket(ticketFilters.SHOW_VALID);\n    Animated.parallel([Animated.timing(width, {\n      toValue: 70,\n      duration: 300\n    }).start(), Animated.timing(xValue, {\n      toValue: 16,\n      duration: 300\n    }).start()]);\n  };\n\n  _slideToExpired = function _slideToExpired() {\n    props.filterTicket(ticketFilters.SHOW_EXPIRED);\n    Animated.parallel([Animated.timing(width, {\n      toValue: 90,\n      duration: 300\n    }).start(), Animated.timing(xValue, {\n      toValue: 107,\n      duration: 300\n    }).start()]);\n  };\n\n  _slideToAll = function _slideToAll() {\n    props.filterTicket(ticketFilters.SHOW_ALL);\n    Animated.parallel([Animated.timing(width, {\n      toValue: 50,\n      duration: 300\n    }).start(), Animated.timing(xValue, {\n      toValue: 217,\n      duration: 300\n    }).start()]);\n  };\n\n  return React.createElement(View, {\n    style: {\n      display: 'flex',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: colors.secondary,\n      width: '100%',\n      height: 170\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  }), React.createElement(View, {\n    style: {\n      position: 'absolute',\n      backgroundColor: colors.transparent,\n      width: '100%',\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(View, {\n    style: {\n      paddingHorizontal: 16,\n      marginBottom: 14\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  }, React.createElement(Text, {\n    style: styles.pageTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    }\n  }, \"Tickets\")), React.createElement(View, {\n    style: {\n      display: 'flex',\n      flexDirection: 'row',\n      paddingHorizontal: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    }\n  }, React.createElement(Button, {\n    title: \"Valid\",\n    buttonStyle: [styles.ticketCategoryBtn, {\n      width: 70\n    }],\n    titleStyle: {\n      fontSize: 20,\n      color: colors.primary\n    },\n    onPress: _slideToValid,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    }\n  }), React.createElement(Button, {\n    title: \"Expried\",\n    buttonStyle: [styles.ticketCategoryBtn, {\n      width: 90\n    }],\n    titleStyle: {\n      fontSize: 20,\n      color: colors.primary\n    },\n    onPress: _slideToExpired,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    }\n  }), React.createElement(Button, {\n    title: \"All\",\n    buttonStyle: [styles.ticketCategoryBtn, {\n      width: 50\n    }],\n    titleStyle: {\n      fontSize: 20,\n      color: colors.primary\n    },\n    onPress: _slideToAll,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 3,\n      width: '100%',\n      backgroundColor: colors.secondaryLight\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      poition: 'absolute',\n      height: 3,\n      width: width,\n      backgroundColor: colors.primary,\n      marginRight: 20,\n      left: xValue\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    }\n  })), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    }\n  }, React.createElement(FlatList, {\n    scrollEnabled: true,\n    data: props.tickets,\n    keyExtractor: function keyExtractor(item, index) {\n      return index + \"-ticket\";\n    },\n    showsVerticalScrollIndicator: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(RenderTicket, {\n        ticket: item,\n        openQRCodeModal: props.openQRCodeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    }\n  }))), React.createElement(Modal, {\n    transparent: true,\n    visible: props.qrCodeModalVisible,\n    animationType: 'fade',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    }\n  }, React.createElement(TouchableHighlight, {\n    onPress: props.closeQRCodeModel,\n    style: {\n      backgroundColor: '#000000aa',\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    }\n  })), React.createElement(View, {\n    style: styles.qrCodeView,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    }\n  }, React.createElement(QRCode, {\n    value: props.qrCodeData,\n    size: 250,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  pageTitle: {\n    fontSize: 34,\n    fontWeight: 'bold',\n    color: colors.primary\n  },\n  ticketCategoryBtn: {\n    backgroundColor: colors.transparent,\n    paddingLeft: 0,\n    justifyContent: 'flex-start',\n    marginRight: 20\n  },\n  qrCodeView: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    width: '90%',\n    height: '50%',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    alignItems: 'center',\n    top: height * 0.25,\n    borderRadius: 13\n  }\n});\n\nvar filterTickets = function filterTickets(tickets, filter) {\n  switch (filter) {\n    case ticketFilters.SHOW_ALL:\n      return tickets;\n\n    case ticketFilters.SHOW_VALID:\n      return tickets.filter(function (ticket) {\n        return ticket.valid == true;\n      });\n\n    case ticketFilters.SHOW_EXPIRED:\n      return tickets.filter(function (ticket) {\n        return ticket.valid == false;\n      });\n\n    default:\n      throw new Error('Unknown filter:' + filter);\n  }\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    qrCodeModalVisible: state.ticket.showQRCodeModal,\n    tickets: filterTickets(state.ticket.tickets, state.ticketFilter.filter),\n    qrCodeData: state.ticket.qrCodeData\n  };\n};\n\nvar mapDisptachToProps = function mapDisptachToProps(dispatch) {\n  return {\n    filterTicket: function filterTicket(filter) {\n      return dispatch(setTicketFilter(filter));\n    },\n    openQRCodeModal: function openQRCodeModal(data) {\n      return dispatch(openQRCode(data));\n    },\n    closeQRCodeModel: function closeQRCodeModel() {\n      return dispatch(closeQRCode());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDisptachToProps)(TicketListScreen);","map":{"version":3,"sources":["/Users/muhammadtaimoor/Projects/rn-onlineticket/screens/ticketListScreen.js"],"names":["React","useState","connect","Button","colors","RenderTicket","QRCode","ticketFilters","setTicketFilter","closeQRCode","openQRCode","Dimensions","get","height","TicketListScreen","props","Animated","Value","xValue","setXValue","width","setWdith","_slideToValid","filterTicket","SHOW_VALID","parallel","timing","toValue","duration","start","_slideToExpired","SHOW_EXPIRED","_slideToAll","SHOW_ALL","display","flex","backgroundColor","secondary","position","transparent","paddingHorizontal","marginBottom","styles","pageTitle","flexDirection","ticketCategoryBtn","fontSize","color","primary","secondaryLight","poition","marginRight","left","tickets","item","index","openQRCodeModal","qrCodeModalVisible","closeQRCodeModel","qrCodeView","qrCodeData","StyleSheet","create","fontWeight","paddingLeft","justifyContent","alignSelf","alignItems","top","borderRadius","filterTickets","filter","ticket","valid","Error","mapStateToProps","state","showQRCodeModal","ticketFilter","mapDisptachToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { connect } from 'react-redux';\nimport { \n    View, \n    Text, \n    StyleSheet, \n    Animated, \n    FlatList, \n    Modal, \n    TouchableHighlight, \n    Dimensions,\n} from 'react-native';\nimport { Button, } from 'react-native-elements';\nimport { colors } from '../constants/theme';\nimport RenderTicket from '../components/RenderTicket';\nimport QRCode from 'react-native-qrcode-svg';\nimport { ticketFilters, setTicketFilter, closeQRCode, openQRCode } from '../redux';\n\nconst { height, } = Dimensions.get('window');\n\nfunction TicketListScreen(props){\n    const [xValue, setXValue] = useState(new Animated.Value(16));\n    const [width, setWdith] = useState(new Animated.Value(70));\n\n    _slideToValid = () => {\n        props.filterTicket(ticketFilters.SHOW_VALID);\n        Animated.parallel([\n            Animated.timing(width, {\n                toValue: 70,\n                duration: 300,\n            }).start(),\n            Animated.timing(xValue, {\n                toValue: 16,\n                duration: 300,\n            }).start()\n        ]);\n    }\n    _slideToExpired = () => {\n        props.filterTicket(ticketFilters.SHOW_EXPIRED);\n        Animated.parallel([\n            Animated.timing(width, {\n                toValue: 90,\n                duration: 300,\n            }).start(),\n            Animated.timing(xValue, {\n                toValue: 107,\n                duration: 300,\n            }).start()\n        ]);\n    }\n    _slideToAll = () => {\n        props.filterTicket(ticketFilters.SHOW_ALL);\n        Animated.parallel([\n            Animated.timing(width, {\n                toValue: 50,\n                duration: 300,\n            }).start(),\n            Animated.timing(xValue, {\n                toValue: 217,\n                duration: 300,\n            }).start()\n        ]);\n    }\n\n    return (\n        <View style={{display: 'flex', flex: 1}}>\n            <View style={{backgroundColor: colors.secondary, width: '100%', height: 170}}>\n            </View>\n            <View style={{position: 'absolute', backgroundColor: colors.transparent, width: '100%', height: '100%',}}>\n                <View style={{paddingHorizontal: 16, marginBottom: 14}}>\n                    <Text style={styles.pageTitle}>Tickets</Text>\n                </View>\n                <View style={{display: 'flex', flexDirection: 'row', paddingHorizontal: 16,}}>\n                        <Button title=\"Valid\" \n                                buttonStyle={[styles.ticketCategoryBtn, {width: 70}]} \n                                titleStyle={{fontSize: 20, color: colors.primary,}} \n                                onPress={_slideToValid}/>\n                        <Button title=\"Expried\" \n                                buttonStyle={[styles.ticketCategoryBtn, {width: 90}]} \n                                titleStyle={{fontSize: 20, color: colors.primary}} \n                                onPress={_slideToExpired}/>\n                        <Button title=\"All\" \n                                buttonStyle={[styles.ticketCategoryBtn, {width: 50}]} \n                                titleStyle={{fontSize: 20, color: colors.primary}} \n                                onPress={_slideToAll}/>\n                </View>\n                <View style={{height: 3, width: '100%', backgroundColor: colors.secondaryLight,}}>\n                        <Animated.View style={{poition: 'absolute', height: 3, width: width, backgroundColor: colors.primary, marginRight: 20, left: xValue }} />\n                </View>\n                <View style={{flex: 1}}>\n                        <FlatList scrollEnabled\n                                  data={props.tickets}\n                                  keyExtractor= {(item, index) => `${index}-ticket`}\n                                  showsVerticalScrollIndicator= {false}\n                                  renderItem={({item})=> <RenderTicket ticket={item} openQRCodeModal={props.openQRCodeModal} />} />\n                </View>\n            </View>\n            <Modal transparent={true} \n                   visible={props.qrCodeModalVisible}\n                   animationType={'fade'}>\n                <TouchableHighlight onPress={props.closeQRCodeModel} style={{backgroundColor:'#000000aa', flex: 1,}}>\n                    <View style={{ flex: 1,}} />\n                </TouchableHighlight>\n                <View style={styles.qrCodeView}>\n                    <QRCode value={props.qrCodeData}  size={250}/>\n                </View>\n            </Modal>\n        </View>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    pageTitle: {\n        fontSize: 34,\n        fontWeight: 'bold',\n        color: colors.primary,\n    },\n    ticketCategoryBtn : {\n        backgroundColor: colors.transparent, \n        paddingLeft: 0, \n        justifyContent:'flex-start', \n        marginRight: 20,\n    },\n    qrCodeView: { \n        position: 'absolute', \n        backgroundColor:'white', \n        width:'90%', \n        height: '50%', \n        alignSelf: 'center',\n        justifyContent:'center', \n        alignItems:'center', \n        top: height * 0.25,\n        borderRadius: 13, \n    }\n});\n\n\nconst filterTickets = (tickets, filter) => {\n    switch(filter){\n        case ticketFilters.SHOW_ALL:\n            return tickets;\n        case ticketFilters.SHOW_VALID:\n            return tickets.filter(ticket => ticket.valid == true);\n        case ticketFilters.SHOW_EXPIRED:\n            return tickets.filter(ticket => ticket.valid == false);\n        default:\n            throw new  Error('Unknown filter:' + filter)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        qrCodeModalVisible : state.ticket.showQRCodeModal,\n        tickets: filterTickets(state.ticket.tickets, state.ticketFilter.filter),\n        qrCodeData: state.ticket.qrCodeData\n    }\n}\n\nconst mapDisptachToProps = dispatch => {\n    return{\n        filterTicket: filter => dispatch(setTicketFilter(filter)),\n        openQRCodeModal: data => dispatch(openQRCode(data)),\n        closeQRCodeModel: () => dispatch(closeQRCode())\n    }\n}\n\nexport default connect(\n    mapStateToProps, \n    mapDisptachToProps\n)(TicketListScreen);"]},"metadata":{},"sourceType":"module"}