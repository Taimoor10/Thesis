{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/muhammadtaimoor/Projects/adappt/UI/accountInformation.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { Button, Image, Input, Icon } from 'react-native-elements';\nimport { Entypo, Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { colors } from \"../colorFile\";\nimport { connect } from \"react-redux\";\nimport { db } from \"../schema.js\";\n\nfunction accountInformation(_ref) {\n  var navigation = _ref.navigation,\n      accounts = _ref.accounts,\n      savePersonalInfo = _ref.savePersonalInfo;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      account = _useState2[0],\n      setAccount = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      country = _useState8[0],\n      setCountry = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      phoneNo = _useState10[0],\n      setPhoneNo = _useState10[1];\n\n  var accountInfo = {\n    name: name,\n    email: email,\n    country: country,\n    phoneNo: phoneNo\n  };\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"select * from personal_info\", [], function (_, _ref2) {\n        var rows = _ref2.rows;\n        var personalData = rows._array[0];\n        setName(personalData.name);\n        setEmail(personalData.email);\n        setCountry(personalData.country);\n        setPhoneNo(personalData.phone.toString());\n      }, function () {\n        return console.log(\"Error while fetching Account Information\");\n      });\n      tx.executeSql(\"select * from account_info\", [], function (_, _ref3) {\n        var rows = _ref3.rows;\n        setAccount(rows._array);\n      }, function () {\n        return console.log(\"Error while fetching Account Information\");\n      });\n    });\n  }, []);\n\n  var savePersonalinfo = function savePersonalinfo() {\n    db.transaction(function (tx) {\n      tx.executeSql(\"drop table personal_info\", []);\n      tx.executeSql(\"create table if not exists personal_info(id integer primary key not null, name varchar, email varchar, country varchar, phone integer);\", []);\n      tx.executeSql(\"insert into personal_info(name, email, country, phone) values(?,?,?,?)\", [name, email, country, phoneNo]);\n    });\n    navigation.navigate(\"Claims\");\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: _objectSpread({}, styles.container),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: _objectSpread({}, styles.formItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({}, styles.credentials),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"Click on the field to Edit Personal Information\"), React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\",\n      marginTop: 20\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Name : \"), React.createElement(TextInput, {\n    style: _objectSpread({}, styles.textInputStyle),\n    placeholder: \"Enter name\",\n    value: name,\n    onChangeText: function onChangeText(value) {\n      return setName(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.formItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Email : \"), React.createElement(TextInput, {\n    style: _objectSpread({}, styles.textInputStyle),\n    placeholder: \"Enter email\",\n    value: email,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.formItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, \"Country : \"), React.createElement(TextInput, {\n    style: _objectSpread({}, styles.textInputStyle),\n    placeholder: \"Enter country\",\n    value: country,\n    onChangeText: function onChangeText(value) {\n      return setCountry(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.formItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"Phone: \"), React.createElement(TextInput, {\n    style: _objectSpread({}, styles.textInputStyle),\n    placeholder: \"Enter Phone No.\",\n    value: phoneNo,\n    onChangeText: function onChangeText(value) {\n      return setPhoneNo(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      borderBottomColor: 'black',\n      borderBottomWidth: 0.5\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"Save\",\n    buttonStyle: {\n      backgroundColor: colors.grey,\n      width: \"100%\",\n      borderRadius: 10,\n      marginTop: -5,\n      marginBottom: 30,\n      marginLeft: 0\n    },\n    onPress: savePersonalinfo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: _objectSpread({}, styles.ethereumContainer),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Ethereum Identity : \"), account != undefined && account.length > 0 && React.createElement(Text, {\n    style: _objectSpread({}, styles.ethereumKey),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }, account[0].address), React.createElement(Button, {\n    buttonStyle: {\n      backgroundColor: colors.grey,\n      borderRadius: 10\n    },\n    icon: React.createElement(FontAwesome, {\n      name: \"copy\",\n      size: 20,\n      color: colors.white,\n      style: {\n        marginRight: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }),\n    title: \"Copy\",\n    onPress: function onPress() {\n      return;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 1,\n    margin: 27,\n    color: colors.purple\n  },\n  formItem: {\n    marginBottom: 20,\n    color: colors.grey\n  },\n  textInputStyle: {\n    fontSize: 18,\n    marginTop: 10,\n    fontWeight: \"300\"\n  },\n  credentials: {\n    color: colors.grey,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignSelf: 'center',\n    marginTop: -30,\n    fontSize: 12,\n    fontWeight: '700'\n  },\n  ethereumContainer: {\n    backgroundColor: colors.purple,\n    marginTop: 20,\n    padding: 20,\n    borderRadius: 10,\n    borderColor: colors.transparent,\n    alignSelf: 'auto',\n    textAlign: \"center\",\n    alignItems: \"center\"\n  },\n  ethereumKey: {\n    marginTop: 10,\n    marginBottom: 20,\n    color: colors.grey,\n    fontSize: 18\n  },\n  logoView: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accounts: state.account\n  };\n};\n\nexport default connect(mapStateToProps, null)(accountInformation);","map":{"version":3,"sources":["/Users/muhammadtaimoor/Projects/adappt/UI/accountInformation.js"],"names":["React","useState","useEffect","Button","Image","Input","Icon","Entypo","Ionicons","FontAwesome","colors","connect","db","accountInformation","navigation","accounts","savePersonalInfo","account","setAccount","name","setName","email","setEmail","country","setCountry","phoneNo","setPhoneNo","accountInfo","transaction","tx","executeSql","_","rows","personalData","_array","phone","toString","console","log","savePersonalinfo","navigate","styles","container","formItem","credentials","fontWeight","marginTop","textInputStyle","value","borderBottomColor","borderBottomWidth","backgroundColor","grey","width","borderRadius","marginBottom","marginLeft","ethereumContainer","undefined","length","ethereumKey","address","white","marginRight","StyleSheet","create","flex","padding","margin","color","purple","fontSize","alignItems","justifyContent","alignSelf","borderColor","transparent","textAlign","logoView","mapStateToProps","state"],"mappings":"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","sourcesContent":["/*\nThis file provides the functionality to show editable personal iformation and storing it in SQLite database\n*/\n\nimport React, { useState, useEffect } from 'react';\nimport { View, Text, TextInput, StyleSheet, KeyboardAvoidingView, Platform, Keyboard } from 'react-native';\nimport { Button, Image, Input, Icon } from 'react-native-elements';\nimport { Entypo, Ionicons, FontAwesome } from '@expo/vector-icons';\nimport { colors } from '../colorFile';\nimport { connect } from \"react-redux\";\nimport { db } from \"../schema.js\";\n\nfunction accountInformation({ navigation, accounts, savePersonalInfo }) {\n\n    const [account, setAccount] = useState();\n    const [name, setName] = useState();\n    const [email, setEmail] = useState();\n    const [country, setCountry] = useState();\n    const [phoneNo, setPhoneNo] = useState();\n\n    let accountInfo = {\n        name: name,\n        email: email,\n        country: country,\n        phoneNo: phoneNo,\n    }\n\n    useEffect(() => {\n        db.transaction(tx => {\n            tx.executeSql(\"select * from personal_info\",\n                [],\n                (_, { rows }) => {\n                    let personalData = rows._array[0]\n                    setName(personalData.name)\n                    setEmail(personalData.email)\n                    setCountry(personalData.country)\n                    setPhoneNo(personalData.phone.toString())\n                },\n                () => console.log(\"Error while fetching Account Information\"))\n\n            tx.executeSql(\"select * from account_info\",\n                [],\n                (_, { rows }) => {\n                    setAccount(rows._array)\n                },\n                () => console.log(\"Error while fetching Account Information\"))\n        })\n    }, []);\n\n    const savePersonalinfo = () => {\n\n        db.transaction(tx => {\n            tx.executeSql(\"drop table personal_info\",\n                []\n            );\n\n            tx.executeSql(\"create table if not exists personal_info(id integer primary key not null, name varchar, email varchar, country varchar, phone integer);\",\n                []\n            );\n\n            tx.executeSql(\"insert into personal_info(name, email, country, phone) values(?,?,?,?)\",\n                [name, email, country, phoneNo]\n            );\n        })\n\n        navigation.navigate(\"Claims\")\n    }\n\n    return (\n        <KeyboardAvoidingView style={{ ...styles.container }}>\n            <View style={{ ...styles.formItem }}>\n\n                <Text style={{ ...styles.credentials }}>\n                    Click on the field to Edit Personal Information\n                    </Text>\n\n                <Text style={{ fontWeight: \"bold\", marginTop: 20 }}>Name : </Text>\n                <TextInput style={{ ...styles.textInputStyle }}\n                    placeholder=\"Enter name\"\n                    value={name}\n                    onChangeText={value => setName(value)} />\n                <View style={{ borderBottomColor: 'black', borderBottomWidth: 0.5, }} />\n            </View>\n            <View style={{ ...styles.formItem }}>\n                <Text style={{ fontWeight: \"bold\" }}>Email : </Text>\n                <TextInput style={{ ...styles.textInputStyle }}\n                    placeholder=\"Enter email\"\n                    value={email}\n                    onChangeText={value => setEmail(value)} />\n                <View style={{ borderBottomColor: 'black', borderBottomWidth: 0.5, }} />\n            </View>\n            <View style={{ ...styles.formItem }}>\n                <Text style={{ fontWeight: \"bold\" }}>Country : </Text>\n                <TextInput style={{ ...styles.textInputStyle }}\n                    placeholder=\"Enter country\"\n                    value={country}\n                    onChangeText={value => setCountry(value)} />\n                <View style={{ borderBottomColor: 'black', borderBottomWidth: 0.5, }} />\n            </View>\n            <View style={{ ...styles.formItem }}>\n                <Text style={{ fontWeight: \"bold\" }}>Phone: </Text>\n                <TextInput style={{ ...styles.textInputStyle }}\n                    placeholder=\"Enter Phone No.\"\n                    value={phoneNo}\n                    onChangeText={value => setPhoneNo(value)} />\n                <View style={{ borderBottomColor: 'black', borderBottomWidth: 0.5, }} />\n            </View>\n            <View>\n                <Button title=\"Save\"\n                    buttonStyle={{\n                        backgroundColor: colors.grey,\n                        width: \"100%\",\n                        borderRadius: 10,\n                        marginTop: -5,\n                        marginBottom: 30,\n                        marginLeft: 0\n                    }}\n                    onPress={savePersonalinfo} />\n            </View>\n            <View style={{ ...styles.ethereumContainer }}>\n                <Text>Ethereum Identity : </Text>\n                {account != undefined &&\n                    account.length > 0 &&\n                    <Text style={{ ...styles.ethereumKey }}>\n                        {account[0].address}\n                    </Text>\n                }\n                <Button\n                    buttonStyle={{\n                        backgroundColor: colors.grey,\n                        borderRadius: 10,\n                    }}\n                    icon={\n                        <FontAwesome name=\"copy\" size={20} color={colors.white} style={{ marginRight: 10 }} />\n                    }\n                    title=\"Copy\"\n                    onPress={() => { return }}\n                />\n            </View>\n        </KeyboardAvoidingView>\n    )\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        padding: 1,\n        margin: 27,\n        color: colors.purple\n    },\n    formItem: {\n        marginBottom: 20,\n        color: colors.grey\n    },\n    textInputStyle: {\n        fontSize: 18,\n        marginTop: 10,\n        fontWeight: \"300\"\n    },\n    credentials: {\n        color: colors.grey,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n        marginTop: -30,\n        fontSize: 12,\n        fontWeight: '700'\n    },\n    ethereumContainer: {\n        backgroundColor: colors.purple,\n        marginTop: 20,\n        padding: 20,\n        borderRadius: 10,\n        borderColor: colors.transparent,\n        alignSelf: 'auto',\n        textAlign: \"center\",\n        alignItems: \"center\"\n    },\n    ethereumKey: {\n        marginTop: 10,\n        marginBottom: 20,\n        color: colors.grey,\n        fontSize: 18,\n    },\n    logoView: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n    }\n});\n\nconst mapStateToProps = (state) => {\n    return {\n        accounts: state.account,\n    }\n}\n\n// const mapActionToProps = (dispatch) => {\n//     return{\n//         savePersonalInfo : (accountInfo) => dispatch(savePersonalInfo(accountInfo))\n//     }\n// }\n\nexport default connect(mapStateToProps, null)(accountInformation);"]},"metadata":{},"sourceType":"module"}